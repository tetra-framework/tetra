{
  "version": 3,
  "sources": ["../../../js/tetra.core.js", "../../../js/tetra.js"],
  "sourcesContent": ["\nconst Tetra = {\n  ws: null,\n  pendingSubscriptions: new Map(), // Store subscriptions until WS is ready\n\n  init() {\n    Alpine.magic('static', () => Tetra.$static);\n    // Initialize WebSocket connection immediately, if in use\n    if(window.__tetra_useWebsockets) {\n      this.ensureWebSocketConnection();\n    }\n  },\n\n  $static() {\n    return (path) => {\n      return window.__tetra_staticRoot+path;\n    }\n  },\n\n\n  // Add WebSocket management methods\n  ensureWebSocketConnection() {\n    if (!this.ws || this.ws.readyState === WebSocket.CLOSED) {\n      console.log(\"Connecting to Tetra WebSocket...\");\n      this.ws = new WebSocket(`ws://${window.location.host}/ws/tetra/`);\n\n      this.ws.onopen = () => {\n        console.log('Tetra WebSocket connected');\n        // Process any pending subscriptions\n        this.pendingSubscriptions.forEach((data, componentId) => {\n          this.ws.send(JSON.stringify(data));\n        });\n        this.pendingSubscriptions.clear();\n      };\n\n      this.ws.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        // Dispatch to all reactive components\n        // document.dispatchEvent(new CustomEvent('tetra:push-message', {detail: data}));\n        this.handleWebsocketMessage(data);\n      };\n\n      this.ws.onclose = () => {\n        console.log('Tetra WebSocket disconnected');\n        // Attempt to reconnect after 3 seconds\n        setTimeout(() => {\n          this.ensureWebSocketConnection();\n        }, 3000);\n      };\n\n      this.ws.onerror = (error) => {\n        console.error('Tetra WebSocket error:', error);\n      };\n    }\n    return this.ws;\n  },\n\n  _get_component_by_id(component_id) {\n    // Find the component by ID and return it\n    const componentEl = document.querySelector(`[tetra-component-id=\"${component_id}\"]`);\n    if (!componentEl) {\n      console.error(`AlpineJs Component with ID ${component_id} not found.`);\n      return;\n    }\n    return Alpine.$data(componentEl);\n  },\n\n  _get_components_by_subscribe_group(group) {\n    // Find all components by subscribe topic and return them\n    // Find all elements with tetra-subscription attribute\n    const componentEls = document.querySelectorAll('[tetra-subscription]');\n\n    // Filter to only those that contain the topic as a separate value\n    const matchingEls = Array.from(componentEls).filter(el => {\n      const subscribeAttr = el.getAttribute('tetra-subscription');\n      const topics = subscribeAttr.split(',').map(t => t.trim());\n      return topics.includes(group);\n    });\n\n    return matchingEls.map(el => Alpine.$data(el));\n  },\n\n  handleWebsocketMessage(data) {\n    // This function centrally handles incoming websocket data and dispatches it to the\n    // corresponding methods, if necessary.\n    const dataType = data.type;\n\n    switch (dataType) {\n      case 'subscription.response':\n        this.handleSubscriptionResponse(data);\n        break;\n\n      case 'notify':\n        this.handleGroupNotify(data);\n        break;\n\n      case 'component.update_data':\n        this.handleComponentUpdateData(data);\n        break;\n\n      // case 'component.reload':\n      //   this.handleComponentReload(data);\n      //   break;\n\n      case 'component.remove':\n        this.handleComponentRemove(data);\n        break;\n\n      default:\n        console.warn('Unknown WebSocket message type:', dataType,\":\", data);\n    }\n  },\n\n  handleSubscriptionResponse(event){\n    switch(event[\"status\"]) {\n      case \"subscribed\":\n        console.debug(\"Subscription to group\", event[\"group\"], \"successful.\")\n        document.dispatchEvent(new CustomEvent(`tetra:component-subscribed`,  {\n          detail: {\n            component: this,\n            group: event[\"group\"]\n          },\n        }))\n        break;\n      case \"unsubscribed\":\n        console.debug(\"Subscription to group\", event[\"group\"], \"redacted successfully.\")\n        document.dispatchEvent(new CustomEvent(`tetra:component-unsubscribed`,  {\n          detail: {\n            component: this,\n            group: event[\"group\"]\n          },\n        }))\n        break;\n      case \"error\":\n        console.error(\"Error subscribing component\", event[\"component_id\"], \"to group\", event[\"group\"], \":\", event[\"message\"])\n        document.dispatchEvent(new CustomEvent(`tetra:component-subscription-error`,  {\n          detail: {\n            component: this,\n            group: event[\"group\"],\n            message:event[\"message\"]\n          },\n        }))\n        break;\n      default:\n        console.debug(\"Subscription response faulty:\", event)\n    }\n  },\n\n  handleGroupNotify(data) {\n    //TODO\n    const { group, event_name, data: payload } = data;\n\n    // Dispatch group-specific event\n    document.dispatchEvent(new CustomEvent(`tetra:group:${group}`, {\n      detail: {\n        event_name,\n        data: payload,\n        sender_id,\n        group\n      }\n    }));\n\n    // Dispatch generic group event\n    document.dispatchEvent(new CustomEvent('tetra:group-message', {\n      detail: {\n        event_name,\n        data: payload,\n        sender_id,\n        group\n      }\n    }));\n  },\n\n  handleComponentUpdateData(event) {\n    const { type, group, data } = event;\n    const components = this._get_components_by_subscribe_group(group);\n    // iter through components and update their data fields\n    components.forEach(component => component._updateData(data));\n\n  },\n\n  handleComponentRemove(event) {\n    const { type, group, component_id } = event;\n\n    const component = this._get_component_by_id(component_id)\n\n    if (component && component._removeComponent) {\n      component._removeComponent();\n    } else {\n      // Fallback: just remove the element using JavaScript.\n      // This does not dispatch the `tetra:component-before-remove` event,\n      // but at least the component vanishes... :-)\n      component.remove();\n      console.debug(\"Element with ID ${component_id} not identified as Alpine component, just removed it anyway.\");\n    }\n  },\n\n  sendWebSocketMessage(message) {\n    if (!this.ws) {\n      console.log(\"WebSocket is not connected. Cannot send message.\");\n      return\n    }\n    if (this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify(message));\n    } else {\n      // Store subscription messages until connection is ready\n      if (message.type === 'subscribe' && message.component_id) {\n        this.pendingSubscriptions.set(message.component_id, message);\n      }\n      // Queue other messages\n      this.ws.addEventListener('open', () => {\n        this.ws.send(JSON.stringify(message));\n      }, { once: true });\n    }\n  },\n\n  alpineComponentMixins() {\n    return {\n      // Alpine.js lifecycle:\n      init() {\n        this.component_id = this.$el.getAttribute('tetra-component-id');\n        this.$dispatch('tetra:child-component-init', {component:  this});\n        // Set component ID attribute on DOM element for targeting\n        this.__initServerWatchers();\n\n        // Auto-subscribe if component is reactive\n        if (this.$el.hasAttribute('tetra-reactive')) {\n          Tetra.ensureWebSocketConnection();\n        }\n\n        // Handle dynamic subscriptions from template\n\n        const group = this.$el.getAttribute('tetra-subscription');\n        if (group) {\n          this._subscribe(group);\n          // Listen for group-specific events\n          // document.addEventListener(`tetra:group:${group}`, (event) => {\n          //   this._handleGroupEvent(event.detail);\n          // });\n        }\n\n        if (this.__initInner) {\n          this.__initInner();\n        }\n        // if this component issues a before-request event, set .tetra-request to it\n        document.addEventListener(\"tetra:before-request\", (event) => {\n          // try to find any element with a \"tx-indicator\" attribute within this element\n          const css_selector = event.target.getAttribute('tx-indicator')\n          if(css_selector){\n            // if there is a tx-indicator pointing to an element, use that element as loading indicator\n            this.$el.querySelectorAll(css_selector).forEach(el => el.classList.add(\"tetra-request\"));\n          } else {\n            event.target.classList.add(\"tetra-request\");\n          }\n        })\n        document.addEventListener(\"tetra:after-request\", (event) => {\n          const css_selector = event.target.getAttribute('tx-indicator')\n          if(css_selector){\n            this.$el.querySelectorAll(css_selector).forEach(el => el.classList.remove(\"tetra-request\"));\n          } else {\n            event.target.classList.remove(\"tetra-request\");\n          }\n        })\n      },\n      destroy() {\n        this.$dispatch('tetra:child-component-destroy', {component:  this});\n\n        // Unsubscribe from all group when component is destroyed\n        if (this.__subscribedGroups) {\n          this.__subscribedGroups.forEach(group => {\n            this._unsubscribe(group);\n          });\n        }\n\n        if (this.__destroyInner) {\n          this.__destroyInner();\n        }\n      },\n      _handleGroupEvent(eventData) {\n        // components can:\n        // * listen for tetra:group-event:<eventName> events\n        // * listen for tetra:group:<groupName> events\n        const { event_name, data, sender_id, group } = eventData;\n\n        // Don't process events from self\n        if (sender_id === this.component_id) {\n          return;\n        }\n\n        // Dispatch local event\n        this.$dispatch(`tetra:group-event:${event_name}`, {\n          data,\n          sender_id,\n          group,\n          component: this\n        });\n      },\n      // Tetra built ins:\n      _updateHtml(html) {\n        Alpine.morph(this.$root, html, {\n          updating(el, toEl, childrenOnly, skip) {\n            if (toEl.hasAttribute && toEl.hasAttribute('x-data-maintain') && el.hasAttribute && el.hasAttribute('x-data')) {\n              toEl.setAttribute('x-data', el.getAttribute('x-data'));\n              toEl.removeAttribute('x-data-maintain');\n            } else if (toEl.hasAttribute && toEl.hasAttribute('x-data-update') && el.hasAttribute && el.hasAttribute('x-data')) {\n              let data = Tetra.jsonDecode(toEl.getAttribute('x-data-update'));\n              let old_data = Tetra.jsonDecode(toEl.getAttribute('x-data-update-old'));\n              let comp = window.Alpine.$data(el);\n              for (const key in data) {\n                if (old_data.hasOwnProperty(key) && (old_data[key] !== comp[key])) {\n                  // If the data that was submitted to the server has since changed we don't overwrite it\n                  continue\n                }\n                comp[key] = data[key];\n              }\n              toEl.setAttribute('x-data', el.getAttribute('x-data'));\n              toEl.removeAttribute('x-data-update');\n            }\n          },\n          lookahead: true\n        });\n        this.$dispatch('tetra:component-updated', { component: this });\n      },\n      _updateData(data) {\n        for (const key in data) {\n          this[key] = data[key];\n        }\n        this.$dispatch('tetra:component-data-updated', { component: this });\n      },\n      _setValueByName(name, value){\n        // sets value to the input field with the given name\n        // This is especially useful for emptying a file field, as the browser doesn't do that on page refreshes.\n        let inputs = document.getElementsByName(name);\n        for (let i = 0; i < inputs.length; i++) {\n          inputs[i].value = value;\n        }\n      },\n      _removeComponent() {\n        this.$dispatch('tetra:component-before-remove', { component: this });\n        this.$root.remove();\n      },\n      _replaceComponent(html) {\n        this.$dispatch('tetra:component-before-remove', { component: this });\n        this.$root.insertAdjacentHTML('afterend', html);\n        this.$root.remove();\n        this.$dispatch('tetra:component-updated', { component: this });\n      },\n      _redirect(url) {\n        document.location = url;\n      },\n      _dispatch(name, data) {\n        this.$dispatch(name, {\n          _component: this,\n          ...data\n        });\n      },\n      _pushUrl(url, replace=false) {\n        if(replace){\n          window.history.replaceState(null, '', url);\n        } else {\n          window.history.pushState(null, '', url);\n        }\n      },\n      _updateSearchParam(param, value) {\n        const url = new URL(window.location);\n        if (value) {\n          url.searchParams.set(param, value);\n        } else {\n          url.searchParams.delete(param);\n        }\n        window.history.pushState(null, \"\", url.toString());\n      },\n\n      // Push notification methods\n      _subscribe(groupName, autoUpdate = true) {\n        if (!this.__subscribedGroups) {\n          this.__subscribedGroups = new Set();\n        }\n\n        this.__subscribedGroups.add(groupName);\n\n        return Tetra.sendWebSocketMessage({\n          type: 'subscribe',\n          group: groupName,\n          component_id: this.component_id,\n          component_class: this.componentName,\n          auto_update: autoUpdate\n        });\n      },\n\n      _unsubscribe(groupName) {\n        if (this.__subscribedGroups) {\n          this.__subscribedGroups.delete(groupName);\n        }\n\n        return Tetra.sendWebSocketMessage({\n          type: 'unsubscribe',\n          group: groupName,\n          component_id: this.component_id\n        });\n      },\n\n      _notifyGroup(groupName, eventName, data) {\n        return Tetra.sendWebSocketMessage({\n          type: 'notify',\n          group: groupName,\n          event_name: eventName,\n          data: data,\n          sender_id: this.component_id\n        });\n      },\n\n\n      // Tetra private:\n      __initServerWatchers() {\n        this.__serverMethods.forEach(item => {\n          if (item.watch) {\n            item.watch.forEach(propName => {\n              this.$watch(propName, async (value, oldValue) => {\n                await this[item.name](value, oldValue, propName);\n              })\n            })\n          }\n        })\n      },\n      __childComponents: {},\n      __rootBind: {\n        ['@tetra:child-component-init'](event) {\n          event.stopPropagation();\n          const comp = event.detail.component;\n          if (comp.key === this.key) {\n            return\n          }\n          if (comp.key) {\n            this.__childComponents[comp.key] = comp;\n          }\n          comp._parent = this;\n        },\n        ['@tetra:child-component-destroy'](event) {\n          event.stopPropagation();\n          const comp = event.detail.component;\n          if (comp.key === this.key) {\n            return\n          }\n          delete this.__childComponents[comp.key];\n          event.detail.component._parent = null;\n        }\n      }\n    }\n  },\n\n  makeServerMethods(serverMethods) {\n    const methods = {};\n    serverMethods.forEach((serverMethod) => {\n      var func = async function(...args) {\n        // TODO: ensure only one concurrent?\n        return await Tetra.callServerMethod(this, serverMethod.name, serverMethod.endpoint, args)\n      }\n      if (serverMethod.debounce) {\n        func = Tetra.debounce(func, serverMethod.debounce, serverMethod.debounce_immediate)\n      } else if (serverMethod.throttle) {\n        func = Tetra.throttle(func, serverMethod.throttle, {\n          leading: serverMethod.throttle_leading,\n          trailing: serverMethod.throttle_trailing\n        })\n      }\n      methods[serverMethod.name] = func;\n    })\n    return methods\n  },\n\n  makeAlpineComponent(componentName, script, serverMethods, serverProperties) {\n    Alpine.data(\n      componentName,\n      (initialDataJson) => {\n        const {init, destroy, ...script_rest} = script;\n        const initialData = Tetra.jsonDecode(initialDataJson);\n        const data = {\n          componentName,\n          __initInner: init,\n          __destroyInner: destroy,\n          __serverMethods: serverMethods,\n          __serverProperties: serverProperties,\n          ...(initialData || {}),\n          ...script_rest,\n          ...Tetra.makeServerMethods(serverMethods),\n          ...Tetra.alpineComponentMixins(),\n        }\n        return data\n      }\n    )\n  },\n\n  getStateWithChildren(component) {\n    const data = {}\n    component.__serverProperties.forEach((key) => {\n      data[key] = component[key]\n    })\n    const r = {\n      encrypted: component.__state,\n      data: data,\n      children: []\n    }\n    for (const key in component.__childComponents) {\n      const comp = component.__childComponents[key];\n      r.children.push(Tetra.getStateWithChildren(comp));\n    }\n    return r;\n  },\n\n  loadScript(src) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.appendChild(script);\n    });\n  },\n\n  loadStyles(href) {\n    return new Promise((resolve, reject) => {\n      const link = document.createElement('link');\n      link.href = href;\n      link.rel  = 'stylesheet';\n      link.type = 'text/css';\n      link.onload = resolve;\n      link.onerror = reject;\n      document.head.appendChild(link);\n    });\n  },\n  getFilenameFromContentDisposition(contentDisposition) {\n    if (!contentDisposition) return null;\n\n    // First, try to get the filename* parameter (RFC 5987)\n    let matches = /filename\\*=([^']*)'([^']*)'([^;]*)/i.exec(contentDisposition);\n    if (matches) {\n      // Decode the UTF-8 encoded filename\n      try {\n        return decodeURIComponent(matches[3]);\n      } catch (e) {\n        console.warn('Error decoding filename:', e);\n      }\n    }\n    // Try to get the regular filename parameter\n    matches = /filename=[\"']?([^\"';\\n]*)[\"']?/i.exec(contentDisposition);\n    if (matches) {\n      return matches[1];\n    }\n    return null;\n  },\n\n  async handleServerMethodResponse(response, component) {\n    if (response.status === 200) {\n      if (response.headers.get('T-Response') !== \"true\") {\n        throw new Error(\"Response is not a Tetra response. Please check the server implementation.\")\n      }\n      // handle Django messages and emit \"tetra:new-message\" for each one, so components can react on that individually\n      const messages = Tetra.jsonDecode(response.headers.get('T-Messages'));\n      if (messages) {\n        messages.forEach((message, index) => {\n          component.$dispatch('tetra:new-message', message)\n        })\n      }\n      const cd = response.headers.get('Content-Disposition')\n      if (cd?.startsWith(\"attachment\")) {\n        const a = document.createElement('a')\n        a.href = URL.createObjectURL(await response.blob())\n        a.download = this.getFilenameFromContentDisposition(cd)\n        a.click()\n        a.remove()\n        return;\n\n      }\n      const respData = Tetra.jsonDecode(await response.text());\n      if (respData.success) {\n        let loadingResources = [];\n        respData.js.forEach(src => {\n          if (!document.querySelector(`script[src=\"${CSS.escape(src)}\"]`)) {\n            loadingResources.push(Tetra.loadScript(src));\n          }\n        })\n        respData.styles.forEach(src => {\n          if (!document.querySelector(`link[href=\"${CSS.escape(src)}\"]`)) {\n            loadingResources.push(Tetra.loadStyles(src));\n          }\n        })\n        await Promise.all(loadingResources);\n        if (respData.callbacks) {\n          respData.callbacks.forEach((item) => {\n            // iterate down path to callback\n            let obj = component;\n            item.callback.forEach((name, i) => {\n              if (i === item.callback.length-1) {\n                obj[name](...item.args);\n              } else {\n                obj = obj[name];\n                console.log(name, obj)\n              }\n            })\n          })\n        }\n        return respData.result;\n      } else {\n        // TODO: better errors\n        throw new Error('Error processing public method');\n      }\n    } else {\n      throw new Error(`Server responded with an error ${response.status} (${response.statusText})`);\n    }\n  },\n\n  async callServerMethod(component, methodName, methodEndpoint, args) {\n    let component_state = Tetra.getStateWithChildren(component);\n    component_state.args = args || [];\n    let payload = {\n      method: 'POST',\n      headers: {\n        'T-Request': \"true\",\n        'T-Current-URL': document.location.href,\n        'X-CSRFToken': window.__tetra_csrfToken,\n      },\n      mode: 'same-origin',\n    }\n\n    let formData = new FormData();\n    let hasFiles = false;\n    for(const [key, value] of Object.entries(component_state.data)){\n      // TODO: handle multi-file uploads\n      if (value instanceof File) {\n        hasFiles = true;\n        // A file is not uploaded anyway, as the browser automatically deletes the data if submitted within a JSON.\n        // On the server, only an empty {} will arrive, so we can set it to {} anyway.\n        component_state.data[key] = {};\n        formData.append(key, value);\n        // TODO: prevent re-uploading of files that are already uploaded.\n      }\n    }\n\n    // check if FormData has *any* entry - and if not, send JSON request\n    if (hasFiles) {\n      formData.append('component_state', Tetra.jsonEncode(component_state));\n      payload.body = formData;\n    } else {\n      payload.body = Tetra.jsonEncode(component_state)\n      payload.headers['Content-Type'] = 'application/json'\n    }\n    component.$dispatch('tetra:before-request', {component: this});\n    const response = await fetch(methodEndpoint, payload);\n    component.$dispatch('tetra:after-request', {component: this})\n    return await this.handleServerMethodResponse(response, component);\n  },\n\n  jsonReplacer(key, value) {\n    if (value instanceof Date) {\n      return {\n        __type: 'datetime',\n        value: value.toISOString(),\n      };\n    } else if (value instanceof Set) {\n      return {\n        __type: 'set',\n        value: Array.from(value)\n      };\n    }\n    // else if (value?.[0] instanceof File) {\n    //   return {\n    //     __type: 'file',\n    //     name: value[0].name,\n    //     value: value[0],\n    //     size: value[0].size,\n    //     content_type: value[0].type,\n    //   };\n    // }\n    return value;\n  },\n\n  jsonReviver(key, value) {\n    if (value && typeof value === 'object' && value.__type) {\n      if (value.__type === 'datetime') {\n        return new Date(value);\n      } else if (value.__type === 'set') {\n        return new Set(value);\n      }\n    }\n    return value\n  },\n\n  jsonEncode(obj) {\n    return JSON.stringify(obj, Tetra.jsonReplacer);\n  },\n\n  jsonDecode(s) {\n    return JSON.parse(s, Tetra.jsonReviver)\n  },\n\n  debounce(func, wait, immediate) {\n    var timeout\n    return function() {\n      var context = this, args = arguments\n      var later = function () {\n        timeout = null\n        if (!immediate) func.apply(context, args);\n      }\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    }\n  },\n\n  throttle(func, wait, options) {\n    // From Underscore.js\n    // https://underscorejs.org\n    // (c) 2009-2022 Jeremy Ashkenas, Julian Gonggrijp, and DocumentCloud and\n    // Investigative Reporters & Editors\n    // Underscore may be freely distributed under the MIT license.\n    // --\n    // Returns a function, that, when invoked, will only be triggered at most once\n    // during a given window of time. Normally, the throttled function will run\n    // as much as it can, without ever going more than once per `wait` duration;\n    // but if you'd like to disable the execution on the leading edge, pass\n    // `{leading: false}`. To disable execution on the trailing edge, ditto.\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var _now = new Date().getTime();\n      if (!previous && options.leading === false) previous = _now;\n      var remaining = wait - (_now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = _now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  }\n\n}\n\nexport default Tetra;\n", "import Tetra from './tetra.core'\n\nwindow.Tetra = Tetra;\nwindow.document.addEventListener('alpine:init', () => {\n  Tetra.init();\n})\n"],
  "mappings": "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",
  "names": ["sender_id"]
}
